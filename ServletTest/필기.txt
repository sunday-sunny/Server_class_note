1. D:\class\server 폴더
2. 이클립스 > 워크 스페이스 교체
3. 새 프로젝트 > Dynamic Web Project > "ServletTest", Dynamic web module version(3.1)
4. Context root > "servlet"
5. web.xml 체크


Servlet, 서블릿
- 웹서버측에서 자바를 사용한 프로그램을 동작시키는 기술(환경)
- 목적? 동적으로 웹페이지를 만들기 위해서!


Servlet Class, 서블릿 클래스
- 자바 클래스
- 알바생

Servlet Class 작성 규칙

1. 서블릿 클래스 선언
	a. javax.servlet.Servlet 인터페이스를 구현한다. > 복잡함
	a. javax.servlet.http.HttpServlet 클래스를 상속받는다. > 간편함 > 선택

2. doGet/doPost 메소드 선언
	- 둘 중 하나 선언 or 둘 다 선언
	- 클라이언트(브라우저)의 요청이 들어오면 자동으로 호출되는 메소드
	- 동적으로 HTML 페이지를 만드는 역할
	- 메소드 작성 규칙
		a. 매개변수 작성(2개)
			1. java.servlet.http.HttpServletRequest
			2. java.servlet.http.HttpServletResponse
		b. 예외 미루기
			1. java.io.IOExceptoin
			2. java.servlet.ServletException

3. 동적 HTML 문서 작성 구현
	- HttpServletResponse 객체의 getWriter() 메소드 호출 > PrintWriter 객체 반환
	- PrintWriter 객체의 printXXX("<html>")를 사용해서 동적으로 코드를 작성한다.
	- 페이지 완성 > 브라우저에게 반환

4. 브라우저가 자바 파일(서블릿, 알바생)을 호출할 수 있는 가상 주소 매핑
	- web.xml




/* 2022-01-06 */
브라우저가 서버에게 페이지(자원)을 요청하는 방식 > Request Method
브라우저가 서버에게 전달한 정보를 서버측에서 수신하는 방법 > Response Method

<form method="POST" action="server.jsp">

클라이언트 -> 서버
1. GET		> 데이터 주세요 (요청)
2. POST		> 데이터를 줄테니 저장해 주세요. > INSERT
--------------
3. PUT		> 기존의 데이터 정보 중 *일부*를 수정해 주세요. > UPDATE
4. UPDATE	> 기존으 데이터 *전체*를 수정해 주세요. > UPDATE
5. DELETE	> 기존의 데이터를 삭제해 주세요.		> DELETE


POST 요청
1. <form method="POST">

GET 요청
1. <form method="GET">
2. <a>
3. location.href
4. F5
5. URL 입력











